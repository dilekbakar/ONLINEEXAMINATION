// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OnlineSinav.Data.Data;

namespace OnlineSinav.Data.Migrations
{
    [DbContext(typeof(OnlineSinavDBContext))]
    [Migration("20220826112607_addedFirstMigration")]
    partial class addedFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OnlineSinav.Data.Model.ExamResults", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Answer")
                        .HasColumnType("integer");

                    b.Property<int?>("ExamsID")
                        .HasColumnType("integer");

                    b.Property<int>("QnAsID")
                        .HasColumnType("integer");

                    b.Property<int>("StudentsID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("ExamsID");

                    b.HasIndex("QnAsID");

                    b.HasIndex("StudentsID");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.Exams", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("GroupsID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Time")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("GroupsID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.Groups", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UsersID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("UsersID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.QnAs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Answer")
                        .HasColumnType("integer");

                    b.Property<int>("ExamsID")
                        .HasColumnType("integer");

                    b.Property<string>("Option1")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Option2")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Option3")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Option4")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Option5")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("ExamsID");

                    b.ToTable("QnAs");
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.Students", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CVFileName")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("GroupsID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PictureFileName")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("GroupsID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.Users", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.ExamResults", b =>
                {
                    b.HasOne("OnlineSinav.Data.Model.Exams", "Exams")
                        .WithMany("ExamResults")
                        .HasForeignKey("ExamsID");

                    b.HasOne("OnlineSinav.Data.Model.QnAs", "QnAs")
                        .WithMany("ExamResults")
                        .HasForeignKey("QnAsID")
                        .IsRequired();

                    b.HasOne("OnlineSinav.Data.Model.Students", "Students")
                        .WithMany("ExamResults")
                        .HasForeignKey("StudentsID")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.Exams", b =>
                {
                    b.HasOne("OnlineSinav.Data.Model.Groups", "Groups")
                        .WithMany("Exams")
                        .HasForeignKey("GroupsID")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.Groups", b =>
                {
                    b.HasOne("OnlineSinav.Data.Model.Users", "Users")
                        .WithMany("Groups")
                        .HasForeignKey("UsersID")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.QnAs", b =>
                {
                    b.HasOne("OnlineSinav.Data.Model.Exams", "Exams")
                        .WithMany("QnAs")
                        .HasForeignKey("ExamsID")
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineSinav.Data.Model.Students", b =>
                {
                    b.HasOne("OnlineSinav.Data.Model.Groups", "Groups")
                        .WithMany("Students")
                        .HasForeignKey("GroupsID");
                });
#pragma warning restore 612, 618
        }
    }
}
